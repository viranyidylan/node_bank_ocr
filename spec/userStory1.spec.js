const reader = require("../src/reader");

describe("UserStory 1 Unit Tests / ", () => {

    const testCases = [
        {
            input: `
 _  _  _  _  _  _  _  _  _ 
| || || || || || || || || |
|_||_||_||_||_||_||_||_||_|`,
            output: "000000000"
        },
        {
            input: `
                           
  |  |  |  |  |  |  |  |  |
  |  |  |  |  |  |  |  |  |`,
            output: "111111111"
        },
        {
            input: `
 _  _  _  _  _  _  _  _  _ 
 _| _| _| _| _| _| _| _| _|
|_ |_ |_ |_ |_ |_ |_ |_ |_ `,
            output: "222222222"
        },
        {
            input:`
 _  _  _  _  _  _  _  _  _ 
 _| _| _| _| _| _| _| _| _|
 _| _| _| _| _| _| _| _| _|`,
            output:"333333333"
        },
        {
            input:`
                           
|_||_||_||_||_||_||_||_||_|
  |  |  |  |  |  |  |  |  |`,
            output:"444444444"
        },
        {
            input:`
 _  _  _  _  _  _  _  _  _ 
|_ |_ |_ |_ |_ |_ |_ |_ |_ 
 _| _| _| _| _| _| _| _| _|`,
            output:"555555555"
        },
        {
            input:`
 _  _  _  _  _  _  _  _  _ 
|_ |_ |_ |_ |_ |_ |_ |_ |_ 
|_||_||_||_||_||_||_||_||_|`,
            output:"666666666"
        },
        {
            input:`
 _  _  _  _  _  _  _  _  _ 
  |  |  |  |  |  |  |  |  |
  |  |  |  |  |  |  |  |  |`,
            output:"777777777"
        },
        {
            input:`
 _  _  _  _  _  _  _  _  _ 
|_||_||_||_||_||_||_||_||_|
|_||_||_||_||_||_||_||_||_|`,
            output:"888888888"
        },
        {
            input:`
 _  _  _  _  _  _  _  _  _ 
|_||_||_||_||_||_||_||_||_|
 _| _| _| _| _| _| _| _| _|`,
            output:"999999999"
        }, 
        {
            input:`
    _  _     _  _  _  _  _ 
  | _| _||_||_ |_   ||_||_|
  ||_  _|  | _||_|  ||_| _|`,
            output:"123456789"
        } 
    ];


    testCases.forEach((test, index) => {

        it(`should parse acount number ${test.input}`, () => {            
            const result = reader.parse(test.input);
            expect(result).toBe(test.output);
        })

    })




});